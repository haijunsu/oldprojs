<?xml version="1.0" encoding="UTF-8"?>
<project name="home" default="compile" basedir=".">

	<!-- ===================== Property Definitions =========================== -->
	<property file="build.properties" />
	<property file="${user.home}/build.properties" />
	<property name="backup.home" value="${basedir}/backup"/>
	

	<!-- ================== Custom Ant Task Definitions ======================= -->
	<taskdef name="install" classname="org.apache.catalina.ant.InstallTask" />
	<taskdef name="list" classname="org.apache.catalina.ant.ListTask" />
	<taskdef name="reload" classname="org.apache.catalina.ant.ReloadTask" />
	<taskdef name="remove" classname="org.apache.catalina.ant.RemoveTask" />
	<!-- ==================== Compilation Classpath =========================== -->
	<path id="compile.classpath">
		<!-- Include all elements that Tomcat exposes to applications -->
		<pathelement location="${catalina.home}/common/classes" />
		<fileset dir="${catalina.home}/common/endorsed">
			<include name="*.jar" />
		</fileset>
		<fileset dir="${catalina.home}/common/lib">
			<include name="*.jar" />
		</fileset>
		<pathelement location="${catalina.home}/shared/classes" />
		<fileset dir="${catalina.home}/shared/lib">
			<include name="*.jar" />
		</fileset>
		<pathelement location="${web.home}/WEB-INF/lib" />
		<fileset dir="${web.home}/WEB-INF/lib">
			<include name="*.jar" />
		</fileset>
		<pathelement location="${basedir}/projectlib" />
		<fileset dir="${basedir}/projectlib">
			<include name="*.jar" />
			<include name="*.zip" />
		</fileset>
	</path>

	<!-- ==================== All Target ====================================== -->
	<target name="all" depends="clean,compile" 
		description="Clean build and dist directories, then compile" />

	<!-- ==================== Clean Target ==================================== -->
	<target name="clean" description="Delete old build and dist directories">
		<delete dir="${build.home}" />
		<delete dir="${dist.home}" />
	</target>

	<!-- ==================== Compile Target ================================== -->
	<target name="compile" depends="prepare, gbToASCII" 
		description="Compile Java sources">
		<!-- Compile Java classes as necessary -->
		<mkdir dir="${build.home}/WEB-INF/classes" />
		<!-- Tomcat debug directory -->
		<mkdir dir="${build.home}/work/org/apache/jsp" />
		<javac srcdir="${src.home}" destdir="${build.home}/WEB-INF/classes" 
			debug="${compile.debug}" deprecation="${compile.deprecation}" 
			optimize="${compile.optimize}">
			<classpath refid="compile.classpath" />
		</javac>
		<!-- Copy application resources -->
		<copy todir="${build.home}/WEB-INF/classes">
			<fileset dir="${src.home}" excludes="**/*.java" />
		</copy>
	</target>

	<!-- ==================== Dist Target ===================================== -->
	<target name="dist" depends="compile,javadoc" 
		description="Create binary distribution">
		<!-- Copy documentation subdirectories -->
		<mkdir dir="${dist.home}/docs" />
		<copy todir="${dist.home}/docs">
			<fileset dir="${docs.home}" />
		</copy>
		<!-- Create application JAR file -->
		<jar jarfile="${dist.home}/${app.name}-${app.version}.war" 
			basedir="${build.home}" />
		<!-- Copy additional files to ${dist.home} as necessary -->
	</target>

	<!-- ========== Create war file ========= -->
	<target name="create war" depends="deploy" 
		description="Create binary distribution">
		<!-- Define build time -->
		<tstamp>
	  		<format property="build.time" pattern="yyyy-MM-dd.HH.mm"/>
		</tstamp>
		<!-- copy files to temp directory -->
		<mkdir dir="${dist.home}/temp" />
		<copy todir="${dist.home}/temp">
			<fileset dir="${build.home}">
				<exclude name="**/build.xml" />
				<exclude name="**/build.properties" />
				<exclude name="**/build.xml.sample" />
				<exclude name="**/build.properties.sample" />
			</fileset>
		</copy>
		<!-- Delete Tomcat work directory -->
		<delete dir="${dist.home}/temp/work" />
		<delete dir="${dist.home}/temp/WEB-INF/classes/org/apache/jsp" />
		<!-- Create application JAR file -->
		<mkdir dir="${dist.home}/${app.version}/${build.time}" />
		<jar jarfile="${dist.home}/${app.version}/${build.time}/${app.name}.war" 
			basedir="${dist.home}/temp" />
		<!-- delete temp directory -->
		<delete dir="${dist.home}/temp" />
		<!-- copy source files to src directory -->
		<mkdir dir="${dist.home}/src" />
		<copy todir="${dist.home}/src">
			<fileset dir="${src.home}" />
		</copy>
		<!-- zip source files -->
		<zip destfile="${dist.home}/${app.version}/${build.time}/${app.name}-src.zip" 
			basedir="${dist.home}/src" />
		<!-- delete temp directory -->
		<delete dir="${dist.home}/src" />
	</target>

	<!-- ========== Create zip file ========= -->
	<target name="create zip" depends="deploy" 
		description="Create binary distribution">
		<!-- Define build time -->
		<tstamp>
	  		<format property="build.time" pattern="yyyy-MM-dd.HH.mm"/>
		</tstamp>
		<!-- copy files to temp directory -->
		<mkdir dir="${dist.home}/temp" />
		<copy todir="${dist.home}/temp">
			<fileset dir="${build.home}">
				<exclude name="**/build.xml" />
				<exclude name="**/build.properties" />
				<exclude name="**/build.xml.sample" />
				<exclude name="**/build.properties.sample" />
				<exclude name="**/*.jar" />
			</fileset>
		</copy>
		<!-- Delete Tomcat work directory -->
		<delete dir="${dist.home}/temp/work" />
		<delete dir="${dist.home}/temp/WEB-INF/classes/org/apache/jsp" />
		<!-- Create application JAR file -->
		<mkdir dir="${dist.home}/${app.version}/${build.time}" />
		<zip destfile="${dist.home}/${app.version}/${build.time}/${app.name}.zip" 
			basedir="${dist.home}/temp" />
		<!-- delete temp directory -->
		<delete dir="${dist.home}/temp" />
		<!-- copy source files to src directory -->
		<mkdir dir="${dist.home}/src" />
		<copy todir="${dist.home}/src">
			<fileset dir="${src.home}" />
		</copy>
		<!-- zip source files -->
		<zip destfile="${dist.home}/${app.version}/${build.time}/${app.name}-src.zip" 
			basedir="${dist.home}/src" />
		<!-- delete temp directory -->
		<delete dir="${dist.home}/src" />
	</target>
	
	<!-- ========== Backup Source file ========= -->
	<target name="backup" 
		description="backup all soruce file include jsp files">
		<!-- copy files to temp directory -->
		<tstamp>
	  		<format property="build.time" pattern="yyyy-MM-dd.HH.mm"/>
		</tstamp>
		<mkdir dir="${backup.home}/temp/web" />
		<copy todir="${backup.home}/temp/web">
			<fileset dir="${web.home}">
				<exclude name="**/WEB-INF/lib/*.*" />
				<exclude name="**/build.xml" />
				<exclude name="**/build.properties" />
			</fileset>
		</copy>
		<mkdir dir="${backup.home}/temp/src" />
		<copy todir="${backup.home}/temp/src">
			<fileset dir="${src.home}">
				<exclude name="**/build.xml" />
				<exclude name="**/build.properties" />
			</fileset>
		</copy>
		<!-- zip source files -->
		<zip destfile="${backup.home}/${app.name}-${app.version}-${build.time}.zip" 
			basedir="${backup.home}/temp" />
		<!-- delete temp directory -->
		<delete dir="${backup.home}/temp" />
	</target>
	<!-- ========== Deploy files to web server ========= -->
	<target name="deploy" depends="gbToASCII" 
		description="Deploy files to web server">
		<mkdir dir="${build.home}" />
		<copy todir="${build.home}">
			<fileset dir="${web.home}" />
		</copy>
		<copy todir="${build.home}/WEB-INF/classes">
			<fileset dir="${src.home}" excludes="**/*.java" />
		</copy>
	</target>
	<!-- ========== Prepare Web application runtime's libs ========= -->
	<target name="prepareLibs" 
		description="Prepare Web application runtime's libs">
		<mkdir dir="${build.home}/WEB-INF/lib" />
		<mkdir dir="${build.home}/WEB-INF/classes" />
		<copy todir="${build.home}/WEB-INF/lib">
			<fileset dir="${web.home}/WEB-INF/lib" />
		</copy>
		<!-- copy    file="${basedir}/projectlib/oracle-classes12.zip" todir="${catalina.home}/common/lib"/ -->
		<!-- move    file="${catalina.home}/common/lib/oracle-classes12.zip" tofile="${catalina.home}/common/lib/oracle-classes12.jar"/ -->
	</target>
	<!-- ======== Prepare Tomcat DB2 Lib suppored ========= -->
	<target name="prepareDB2LibToTomcat" 
		description="Prepare Tomcat DB2 Lib suppored">
		<copy file="${basedir}/${jdbclib}/db2java.zip" 
			todir="${catalina.home}/common/lib" />
		<move file="${catalina.home}/common/lib/db2java.zip" 
			tofile="${catalina.home}/common/lib/db2java.jar" />
	</target>

	<!-- ========== Transfer GB to ASCII ========= -->
	<target name="gbToASCII" description="Transfer GB to ASCII">
		<delete file="${src.home}/${resource.dir}/${resource.zh.file}" />
		<exec dir="${src.home}/${resource.dir}" executable="native2ascii.exe">
			<arg line="${resource.src.file} ${resource.zh.file}" />
		</exec>
	</target>
	
	<!-- ========== FTP Deploy ============== -->
	<!--
 	<target name="FTP Deploy" depends="deploy" description="Deploy files to ftp server">
	  <ftp server="${ftp.host}"
	       port="${ftp.port}"
	       remotedir="${ftp.remote.dir}"
	       userid="${ftp.user}"
	       password="${ftp.password}"
	       depends="yes"
	       binary="yes"
	  >
	    <fileset dir="${build.home}">
	      <include name="**/*.*"/>
	    </fileset>
	  </ftp>
	</target>
	-->
	<!--
 	<target name="FTP Deploy" description="Deploy files to ftp server">
	  <ftp action="list"
	       server="www.idn-g.com"
	       port="21"
	       userid="upload"
	       password="upload"
	       listing="/abc.listing"
	  >
	    <fileset>
	      <include name="**/*.*"/>
	    </fileset>
	  </ftp>
	</target>
	-->

	<!-- ==================== Javadoc Target ================================== -->
	<target name="javadoc" depends="compile" 
		description="Create Javadoc API documentation">
		<mkdir dir="${docs.home}" />
		<javadoc access="private" author="false" destdir="${docs.home}" 
			doctitle="${doc.doctitle}" nodeprecated="false" 
			nodeprecatedlist="false" noindex="false" nonavbar="false" 
			notree="false" packagenames="${doc.packagenames}" 
			sourcepath="${src.home}" splitindex="false" use="false" 
			version="false">
			<classpath refid="compile.classpath" />
		</javadoc>
	</target>

	<!-- ==================== Prepare Target ================================== -->
	<target name="prepare">
		<!-- Create build directories as needed -->
		<mkdir dir="${build.home}" />
		<mkdir dir="${build.home}/WEB-INF" />
		<mkdir dir="${build.home}/WEB-INF/classes" />
		<!-- Copy static content of this web application -->
		<copy todir="${build.home}">
			<fileset dir="${web.home}" />
		</copy>
		<!-- Copy external dependencies as required -->
		<!-- *** CUSTOMIZE HERE AS REQUIRED BY YOUR APPLICATION *** -->
		<mkdir dir="${build.home}/WEB-INF/lib" />
		<!--
    <copy todir="${build.home}/WEB-INF/lib" file="${foo.jar}"/>
-->
		<!-- Copy static files from external dependencies as needed -->
		<!-- *** CUSTOMIZE HERE AS REQUIRED BY YOUR APPLICATION *** -->
	</target>
	<!-- ==================== Reload Target =================================== -->
	<!--

  The "reload" target tells the specified Tomcat 4 installation to dynamically
  reload this web application, to reflect changes in the underlying classes or
  the "web.xml" deployment descriptor.

-->
	<target name="reload" description="Reload application on servlet container">
		<reload url="${manager.url}" username="${manager.username}" 
			password="${manager.password}" path="${app.path}" />
	</target>
	<!-- ==================== Remove Target =================================== -->
	<!--

  The "remove" target tells the specified Tomcat 4 installation to dynamically
  remove this web application from service.

  NOTE:  This is the logical opposite of the "install" target.

-->
	<target name="remove" description="Remove application on servlet container">
		<remove url="${manager.url}" username="${manager.username}" 
			password="${manager.password}" path="${app.path}" />
	</target>
	<!-- ====================== List Target =================================== -->
	<target name="list" 
		description="List installed applications on servlet container">
		<list url="${manager.url}" username="${manager.username}" 
			password="${manager.password}" />
	</target>

	<!-- ==================== Install Target ================================== -->
	<target name="install" depends="compile" 
		description="Install application to servlet container">
		<install url="${manager.url}" username="${manager.username}" 
			password="${manager.password}" path="${app.path}" 
			war="file://${build.home}" />
	</target>
</project>