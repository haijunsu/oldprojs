<?xml version="1.0"?>

<project name="Elearning" basedir="." default="usage">

	<!-- ============================================================== -->
	<!-- config ant task properties                                     -->
	<!-- ============================================================== -->
	<!-- java files and properties files -->
    <property name="src.dir" value="${basedir}/src"/>
	<!-- jsp/html files, web.xml and other web config files -->
    <property name="web.dir" value="${basedir}/web"/>
	<!-- deploy path -->
	<property name="deploy.dir" value="${basedir}/build"/>
	<!-- complie output class path -->
    <property name="build.dir" value="${deploy.dir}/WEB-INF/classes"/>
	<!-- dist war path -->
    <property name="war.dir" value="${basedir}/dist"/>
	<!-- project name -->
    <property name="name" value="Elearning"/>

	<!-- tomcat properties -->
    <property name="tomcat.home" value="${basedir}\\..\\..\\servers\\jakarta-tomcat-5.0.28"/>
    <property name="tomcat.manager.url" value="http://localhost:8080/manager"/>
    <property name="tomcat.manager.username" value="admin"/>
    <property name="tomcat.manager.password" value="12345"/>

	<!-- Hibernate properties file -->
    <property name="hibernate.cfg.file" value="${basedir}/hibernate.properties"/>

	<!-- ============================================================== -->
	<!-- config class path                                              -->
	<!-- ============================================================== -->
   <path id="master-classpath">
    	<!-- application classpath -->
        <fileset dir="${deploy.dir}/WEB-INF/lib">
            <include name="*.jar"/>
        	<include name="*.zip"/>
        </fileset>
        <!-- We need the servlet API classes:        -->
        <!--   for Tomcat 4.1 use servlet.jar        -->
        <!--   for Tomcat 5.0 use servlet-api.jar    -->
        <!--   for Other app server - check the docs -->
	    <fileset dir="${tomcat.home}/common/lib">
	        <include name="*.jar"/>
	    </fileset>
    	<!-- complie output path -->
        <pathelement path="${build.dir}"/>
   		<!-- xDoclet path for made Hibernate mapping files -->
   		<fileset dir="${deploy.dir}/WEB-INF/lib/xDoclet">
           <include name="*.jar"/>
   		</fileset>
    </path>

	<!-- SchemaExport tasks define -->
	<taskdef name="schemaexport"
		classname="net.sf.hibernate.tool.hbm2ddl.SchemaExportTask"
		classpathref="master-classpath"/>



	<!-- ============================================================== -->
	<!-- usage tasks                                                    -->
	<!-- ============================================================== -->
    <target name="usage">
        <echo message=""/>
        <echo message="${name} build file"/>
        <echo message="-----------------------------------"/>
        <echo message=""/>
        <echo message="Available targets are:"/>
        <echo message=""/>
        <echo message="build          --> Build the application"/>
        <echo message="genhbmxml      --> Generate mapping documents"/>
        <echo message="initdb         --> Initialize database"/>
        <echo message="native2ascii   --> Convert resources file to ascii format"/>
        <echo message="deployjsp      --> Deploy html files to build directory"/>
        <echo message="deploy         --> Deploy application as directory"/>
        <echo message="deploywar      --> Deploy application as a WAR file"/>
        <echo message="install        --> Install application in Tomcat"/>
        <echo message="reload         --> Reload application in Tomcat"/>
        <echo message="start          --> Start Tomcat application"/>
        <echo message="stop           --> Stop Tomcat application"/>
        <echo message="list           --> List Tomcat applications"/>
        <echo message=""/>
    </target>

	<!-- =================================================================== -->
    <!-- Initialise                                                          -->
    <!-- =================================================================== -->
    <target name="init" description="initialise base properties">
		<tstamp>
	  		<format property="build.time" pattern="yyyy-MM-dd.HH.mm"/>
		</tstamp>
	</target>

	<!-- =================================================================== -->
    <!-- convert resources file to ascii format                              -->
    <!-- =================================================================== -->
    <target name="native2ascii" description="convert resources file to ascii format">
        <echo>+---------------------------------------------------+</echo>
        <echo>| R U N N I N G   N A T I V E 2 A S C I I           |</echo>
        <echo>+---------------------------------------------------+</echo>
        <native2ascii
        	src="${src.dir}/resources"
        	dest="${deploy.dir}"

        />
    	<copy file="${deploy.dir}/MessageResources.properties"
    		tofile="${build.dir}/resources/MessageResources_zh_CN.properties"
    	/>
    	<copy file="${deploy.dir}/MessageResources.properties"
    		tofile="${build.dir}/resources/MessageResources_zh.properties"
    	/>
    	<copy file="${deploy.dir}/FormsResources.properties"
    		tofile="${build.dir}/resources/FormsResources_zh_CN.properties"
    	/>
    	<copy file="${deploy.dir}/FormsResources.properties"
    		tofile="${build.dir}/resources/FormsResources_zh.properties"
    	/>
    	<copy file="${deploy.dir}/MenusResources.properties"
    		tofile="${build.dir}/resources/MenusResources_zh_CN.properties"
    	/>
    	<copy file="${deploy.dir}/MenusResources.properties"
    		tofile="${build.dir}/resources/MenusResources_zh.properties"
    	/>
    	<delete file="${deploy.dir}/MessageResources.properties"/>
    	<delete file="${deploy.dir}/MenusResources.properties"/>
		<delete file="${deploy.dir}/FormsResources.properties"/>
    </target>

	<!-- =================================================================== -->
    <!-- Invoke XDoclet's hibernate                                          -->
    <!-- =================================================================== -->

    <target name="genhbmxml" description="Generate mapping documents">

        <echo>+---------------------------------------------------+</echo>
        <echo>| R U N N I N G   H I B E R N A T E D O C L E T     |</echo>
        <echo>+---------------------------------------------------+</echo>

    	<!-- hibenate doclet task define -->
        <taskdef
           name="hibernatedoclet"
           classname="xdoclet.modules.hibernate.HibernateDocletTask"
           classpathref="master-classpath"
           />
        <hibernatedoclet destdir="${build.dir}">
            <fileset dir="${src.dir}">
            	<include name="**/entity/*.java"/>
            </fileset>
            <hibernate version="2.0"/>
        </hibernatedoclet>

    </target>

    <!-- =================================================================== -->
    <!-- Initialize Database                                                 -->
    <!-- =================================================================== -->
	<target name="initdb"
		depends="genhbmxml"
		description="Initialize database and export sql statments">

		<echo>+---------------------------------------------------+</echo>
        <echo>| R U N N I N G   S C H E M A  E X P O R T          |</echo>
        <echo>+---------------------------------------------------+</echo>
		<schemaexport
			properties="${hibernate.cfg.file}"
			quiet="no"
			text="no"
			drop="no"
			delimiter=";"
			output="${name}.sql">
		    <fileset dir="${build.dir}">
		    	<include name="*/entity/*.hbm.xml"/>
		    </fileset>
		</schemaexport>
	</target>

	<!-- ============================================================== -->
	<!-- complie java source to class                                   -->
	<!-- ============================================================== -->
    <target name="build" depends="init, genhbmxml" description="Compile main source tree java files">

    	<echo>+---------------------------------------------------+</echo>
        <echo>| R U N N I N G   J A V A C                         |</echo>
        <echo>+---------------------------------------------------+</echo>

    	<mkdir dir="${build.dir}"/>
        <javac destdir="${build.dir}" target="1.3" debug="true"
               deprecation="false" optimize="false" failonerror="true">
            <src path="${src.dir}"/>
            <classpath refid="master-classpath"/>
        </javac>
        <copy todir="${build.dir}" preservelastmodified="true">
            <fileset dir="${src.dir}">
                <include name="**/*.properties"/>
            	<include name="**/*.xml"/>
           </fileset>
        </copy>
    </target>

	<!-- ============================================================== -->
	<!-- Deploy html and jsp files to build directiory                  -->
	<!-- ============================================================== -->
    <target name="deployjsp" description="Deploy html files">
        <echo>+---------------------------------------------------+</echo>
        <echo>| R U N N I N G   D E P L O Y  J S P                |</echo>
        <echo>+---------------------------------------------------+</echo>
        <copy todir="${deploy.dir}" preservelastmodified="true">
            <fileset dir="${web.dir}">
                <include name="**/*.*"/>
            	<exclude name="**/WEB-INF/*"/>
            	<exclude name="**/build*"/>
            	<exclude name="**/*deploy.xml"/>
            	<exclude name="**/resin-web.xml"/>
            	<exclude name="**/targets.xml"/>
            	<exclude name="**/weblogic.xml"/>
            	<exclude name="**/.cvsignore"/>
            </fileset>
        </copy>
    </target>

	<!-- ============================================================== -->
	<!-- Deploy files to build directiory                               -->
	<!-- ============================================================== -->
    <target name="deploy" depends="deployjsp, build" description="Deploy application">
        <echo>+---------------------------------------------------+</echo>
        <echo>| R U N N I N G   D E P L O Y                       |</echo>
        <echo>+---------------------------------------------------+</echo>
        <copy todir="${deploy.dir}/WEB-INF" preservelastmodified="true">
            <fileset dir="${web.dir}/WEB-INF">
                <include name="**/*.*"/>
            	<exclude name="**/build*"/>
            	<exclude name="**/*deploy.xml"/>
            	<exclude name="**/resin-web.xml"/>
            	<exclude name="**/targets.xml"/>
            	<exclude name="**/weblogic.xml"/>
            	<exclude name="**/.cvsignore"/>
            </fileset>
        </copy>
    </target>

	<!-- ============================================================== -->
	<!-- create a deployable war file                                   -->
	<!-- ============================================================== -->
    <target name="deploywar" depends="init, deploy" description="Deploy application as a WAR file">
        <echo>+---------------------------------------------------+</echo>
        <echo>| R U N N I N G   D E P L O Y W A R                 |</echo>
        <echo>+---------------------------------------------------+</echo>
    	<mkdir dir="${war.dir}/${build.time}"/>
        <war destfile="${war.dir}/${build.time}/${name}.war"
             webxml="${deploy.dir}/WEB-INF/web.xml">
            <fileset dir="${deploy.dir}">
            	<exclude name="**/web.xml"/>
                <include name="**/*.*"/>
            </fileset>
        </war>
		<!-- zip source files -->
		<zip destfile="${war.dir}/${build.time}/${name}-src.zip">
            <fileset dir="${src.dir}">
                <include name="**/*.java"/>
            </fileset>
		</zip>
    </target>

	<!-- ============================================================== -->
	<!-- clear deploy directory                                         -->
	<!-- ============================================================== -->
    <target name="clear" description="clear all deploy files includes class files">
        <echo>+---------------------------------------------------+</echo>
        <echo>| R U N N I N G   C L E A R                         |</echo>
        <echo>+---------------------------------------------------+</echo>
    	<delete>
    		<fileset dir="${deploy.dir}">
    			<exclude name="**/WEB-INF/lib/*.*"/>
    			<exclude name="**/WEB-INF/lib/xDoclet/*.*"/>
    			<exclude name="**/WEB-INF/classes"/>
    		</fileset>
    	</delete>
    </target>

	<!-- ============================================================== -->
	<!-- Tomcat tasks - remove these if you don't have Tomcat installed -->
	<!-- ============================================================== -->

    <target name="tomcat.install" description="Install application in Tomcat">
        <echo>+---------------------------------------------------+</echo>
        <echo>| R U N N I N G   I N S T A L L to T O M C A T      |</echo>
        <echo>+---------------------------------------------------+</echo>
        <!--copy todir="${tomcat.home}/conf/Catalina/localhost" preservelastmodified="true">
            <fileset dir="${basedir}/">
                <include name="${name}.xml"/>
            </fileset>
        </copy-->
	    <taskdef name="install" classname="org.apache.catalina.ant.InstallTask">
	        <classpath>
	            <path location="${tomcat.home}/server/lib/catalina-ant.jar"/>
	        </classpath>
	    </taskdef>
		<install url="${tomcat.manager.url}"
			username="${tomcat.manager.username}"
			password="${tomcat.manager.password}"
			path="/${name}"
			war="file://${deploy.dir}" />

    </target>

	<target name="tomcat.remove" description="Remove application on servlet container">
	    <echo>+---------------------------------------------------+</echo>
	    <echo>| R E M O V I N G   F R O M   T O M C A T           |</echo>
	    <echo>+---------------------------------------------------+</echo>
	    <taskdef name="remove" classname="org.apache.catalina.ant.RemoveTask">
	        <classpath>
	            <path location="${tomcat.home}/server/lib/catalina-ant.jar"/>
	        </classpath>
	    </taskdef>
		<remove url="${tomcat.manager.url}"
			username="${tomcat.manager.username}"
			password="${tomcat.manager.password}"
			path="/${name}" />
	</target>


	<target name="tomcat.reload" description="Reload application in Tomcat">
        <echo>+---------------------------------------------------+</echo>
        <echo>| R U N N I N G   R E L O A D   C O N T E X T       |</echo>
        <echo>+---------------------------------------------------+</echo>
	    <taskdef name="reload" classname="org.apache.catalina.ant.ReloadTask">
	        <classpath>
	            <path location="${tomcat.home}/server/lib/catalina-ant.jar"/>
	        </classpath>
	    </taskdef>
        <reload url="${tomcat.manager.url}"
                 username="${tomcat.manager.username}"
                 password="${tomcat.manager.password}"
                 path="/${name}"/>
    </target>

    <target name="tomcat.start" description="Start Tomcat application">
        <echo>+---------------------------------------------------+</echo>
        <echo>| R U N N I N G   S T A R T   C O N T E X T         |</echo>
        <echo>+---------------------------------------------------+</echo>
        <taskdef name="start" classname="org.apache.catalina.ant.StartTask">
            <classpath>
                <path location="${tomcat.home}/server/lib/catalina-ant.jar"/>
            </classpath>
        </taskdef>
        <start url="${tomcat.manager.url}"
                 username="${tomcat.manager.username}"
                 password="${tomcat.manager.password}"
                 path="/${name}"/>
    </target>

    <target name="tomcat.stop" description="Stop Tomcat application">
        <echo>+---------------------------------------------------+</echo>
        <echo>| R U N N I N G   S T O P   C O N T E X T           |</echo>
        <echo>+---------------------------------------------------+</echo>
        <taskdef name="stop" classname="org.apache.catalina.ant.StopTask">
            <classpath>
                <path location="${tomcat.home}/server/lib/catalina-ant.jar"/>
            </classpath>
        </taskdef>
        <stop url="${tomcat.manager.url}"
                 username="${tomcat.manager.username}"
                 password="${tomcat.manager.password}"
                 path="/${name}"/>
    </target>

    <target name="tomcat.list" description="List Tomcat applications">
        <echo>+---------------------------------------------------+</echo>
        <echo>| R U N N I N G   L I S T   C O N T E X T S         |</echo>
        <echo>+---------------------------------------------------+</echo>
        <taskdef name="list" classname="org.apache.catalina.ant.ListTask">
            <classpath>
                <path location="${tomcat.home}/server/lib/catalina-ant.jar"/>
            </classpath>
        </taskdef>
        <list url="${tomcat.manager.url}"
                 username="${tomcat.manager.username}"
                 password="${tomcat.manager.password}"/>
    </target>

<!-- End Tomcat tasks -->

</project>
